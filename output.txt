   Compiling plonky2_bn254 v0.1.0 (/Users/hashimotoyutaka/dev2/plonky2_bn254)
warning: unused imports: `IS_MODULUS_AUX_ZERO_LEN`, `IsModulusZeroAux`, `MODULUS_AUX_ZERO_LEN`, `ModulusZeroAux`
 --> src/starks/curves/g1/mod.rs:6:27
  |
6 |         is_modulus_zero::{IsModulusZeroAux, IS_MODULUS_AUX_ZERO_LEN},
  |                           ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^
7 |         modulus_zero::{ModulusZeroAux, MODULUS_AUX_ZERO_LEN},
  |                        ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `verifier::verify_stark_proof`
   --> src/starks/curves/g1/add.rs:279:9
    |
279 |         verifier::verify_stark_proof,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Column`, `Lookup`
  --> src/starks/curves/g1/scalar_mul_stark.rs:13:14
   |
13 |     lookup::{Column, Lookup},
   |              ^^^^^^  ^^^^^^

warning: unused imports: `EvalEqCircuit`, `NUM_RANGE_CHECK_COLS`, `bn254_base_modulus_extension_target`, `eval_round_flags_circuit`
  --> src/starks/curves/g1/scalar_mul_stark.rs:21:26
   |
21 |             eq::{EvalEq, EvalEqCircuit},
   |                          ^^^^^^^^^^^^^
22 |             round_flags::{eval_round_flags, eval_round_flags_circuit, generate_round_flags},
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^
...
25 |         g1::scalar_mul_view::{NUM_RANGE_CHECK_COLS, N_BITS},
   |                               ^^^^^^^^^^^^^^^^^^^^
26 |     },
27 |     utils::{bn254_base_modulus_extension_target, bn254_base_modulus_packfield},
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `G1AddAux`, `eval_g1_add_circuit`
  --> src/starks/curves/g1/scalar_mul_stark.rs:31:24
   |
31 |     add::{eval_g1_add, eval_g1_add_circuit, generate_g1_add, G1AddAux},
   |                        ^^^^^^^^^^^^^^^^^^^                   ^^^^^^^^

warning: unused import: `crate::starks::curves::common::ctl_values::set_ctl_values_target`
   --> src/starks/curves/g1/scalar_mul_stark.rs:424:9
    |
424 |     use crate::starks::curves::common::ctl_values::set_ctl_values_target;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::starks::curves::common::verifier::recursive_verifier`
   --> src/starks/curves/g1/scalar_mul_stark.rs:425:9
    |
425 |     use crate::starks::curves::common::verifier::recursive_verifier;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `plonky2::iop::witness::PartialWitness`
   --> src/starks/curves/g1/scalar_mul_stark.rs:439:9
    |
439 |     use plonky2::iop::witness::PartialWitness;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `plonky2::plonk::circuit_data::CircuitConfig`
   --> src/starks/curves/g1/scalar_mul_stark.rs:441:9
    |
441 |     use plonky2::plonk::circuit_data::CircuitConfig;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `starky::recursive_verifier::set_stark_proof_target`
   --> src/starks/curves/g1/scalar_mul_stark.rs:449:9
    |
449 |     use starky::recursive_verifier::set_stark_proof_target;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `types::PrimeField64`
 --> src/starks/modular/is_modulus_zero.rs:4:57
  |
4 |     field::{extension::Extendable, packed::PackedField, types::PrimeField64},
  |                                                         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `curves::g1::G1`
   --> src/starks/modular/modulus_zero.rs:188:9
    |
188 |         curves::g1::G1,
    |         ^^^^^^^^^^^^^^

warning: unused import: `Range`
 --> src/starks/modular/pol_utils.rs:1:43
  |
1 | use core::ops::{Add, AddAssign, Mul, Neg, Range, Shr, Sub, SubAssign};
  |                                           ^^^^^

warning: unused import: `PrimeField64`
 --> src/starks/modular/pol_utils.rs:4:36
  |
4 | use plonky2::field::types::{Field, PrimeField64};
  |                                    ^^^^^^^^^^^^

warning: unused import: `Field`
 --> src/starks/modular/pol_utils.rs:4:29
  |
4 | use plonky2::field::types::{Field, PrimeField64};
  |                             ^^^^^

warning: unused import: `types::Field`
 --> src/starks/curves/g1/scalar_mul_stark.rs:7:66
  |
7 |     field::{extension::Extendable, polynomial::PolynomialValues, types::Field},
  |                                                                  ^^^^^^^^^^^^

warning: unused variable: `is_addition_step`
   --> src/starks/curves/g1/scalar_mul_stark.rs:236:13
    |
236 |         let is_addition_step = local.is_even;
    |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_addition_step`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `builder`
   --> src/starks/curves/g1/scalar_mul_stark.rs:323:9
    |
323 |         builder: &mut plonky2::plonk::circuit_builder::CircuitBuilder<F, D>,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_builder`

warning: unused variable: `vars`
   --> src/starks/curves/g1/scalar_mul_stark.rs:324:9
    |
324 |         vars: &Self::EvaluationFrameTarget,
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_vars`

warning: unused variable: `yield_constr`
   --> src/starks/curves/g1/scalar_mul_stark.rs:325:9
    |
325 |         yield_constr: &mut starky::constraint_consumer::RecursiveConstraintConsumer<F, D>,
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_yield_constr`

warning: associated function `from_slice` is never used
  --> src/starks/mod.rs:25:19
   |
21 | impl<T: Copy + Clone + Default> U256<T> {
   | --------------------------------------- associated function in this implementation
...
25 |     pub(super) fn from_slice(slice: &[T]) -> &Self {
   |                   ^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: method `to_u16` is never used
  --> src/starks/mod.rs:69:19
   |
62 | impl<F: RichField> U256<F> {
   | -------------------------- method in this implementation
...
69 |     pub(crate) fn to_u16(&self) -> U256<u16> {
   |                   ^^^^^^

warning: function `set_ctl_values_target` is never used
  --> src/starks/curves/common/ctl_values.rs:10:15
   |
10 | pub(crate) fn set_ctl_values_target<F: RichField, W: WitnessWrite<F>>(
   |               ^^^^^^^^^^^^^^^^^^^^^

warning: function `sum_ctl_values_circuit` is never used
  --> src/starks/curves/common/ctl_values.rs:46:15
   |
46 | pub(crate) fn sum_ctl_values_circuit<F: RichField + Extendable<D>, const D: usize>(
   |               ^^^^^^^^^^^^^^^^^^^^^^

warning: trait `EvalEqCircuit` is never used
  --> src/starks/curves/common/eq.rs:15:18
   |
15 | pub(crate) trait EvalEqCircuit<F: RichField + Extendable<D>, const D: usize> {
   |                  ^^^^^^^^^^^^^

warning: function `eval_round_flags_circuit` is never used
  --> src/starks/curves/common/round_flags.rs:76:15
   |
76 | pub(crate) fn eval_round_flags_circuit<F: RichField + Extendable<D>, const D: usize>(
   |               ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `le_bits_to_biguint` is never used
  --> src/starks/curves/common/utils.rs:16:15
   |
16 | pub(crate) fn le_bits_to_biguint(bits: &[bool]) -> BigUint {
   |               ^^^^^^^^^^^^^^^^^^

warning: function `recursive_verifier` is never used
   --> src/starks/curves/common/verifier.rs:101:15
    |
101 | pub(crate) fn recursive_verifier<
    |               ^^^^^^^^^^^^^^^^^^

warning: associated function `from_slice` is never used
  --> src/starks/curves/g1/mod.rs:54:19
   |
50 | impl<T: Copy + Clone + Default> G1<T> {
   | ------------------------------------- associated function in this implementation
...
54 |     pub(super) fn from_slice(slice: &[T]) -> &Self {
   |                   ^^^^^^^^^^

warning: method `generate_range_checks` is never used
  --> src/starks/curves/g1/scalar_mul_stark.rs:73:8
   |
50 | impl<F: RichField + Extendable<D>, const D: usize> G1ScalarMulStark<F, D> {
   | ------------------------------------------------------------------------- method in this implementation
...
73 |     fn generate_range_checks(&self, rows: &mut Vec<[F; G1_SCALAR_MUL_VIEW_LEN]>) {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `add_ctl_values_target` is never used
   --> src/starks/curves/g1/scalar_mul_stark.rs:525:8
    |
525 |     fn add_ctl_values_target<F: RichField + Extendable<D>, const D: usize>(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: constant `FREQ_COL` is never used
  --> src/starks/curves/g1/scalar_mul_view.rs:17:18
   |
17 | pub(super) const FREQ_COL: usize = G1_SCALAR_MUL_VIEW_LEN - 2;
   |                  ^^^^^^^^

warning: constant `RANGE_COUNTER_COL` is never used
  --> src/starks/curves/g1/scalar_mul_view.rs:18:18
   |
18 | pub(super) const RANGE_COUNTER_COL: usize = G1_SCALAR_MUL_VIEW_LEN - 1;
   |                  ^^^^^^^^^^^^^^^^^

warning: constant `RANGE_CHECK_COLS` is never used
  --> src/starks/curves/g1/scalar_mul_view.rs:19:18
   |
19 | pub(super) const RANGE_CHECK_COLS: Range<usize> = 2 * G1_LEN..4 * G1_LEN + G1_ADD_AUX_LEN;
   |                  ^^^^^^^^^^^^^^^^

warning: constant `NUM_RANGE_CHECK_COLS` is never used
  --> src/starks/curves/g1/scalar_mul_view.rs:20:18
   |
20 | pub(super) const NUM_RANGE_CHECK_COLS: usize = RANGE_CHECK_COLS.end - RANGE_CHECK_COLS.start;
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: constant `DOUBLE_COLS` is never used
  --> src/starks/curves/g1/scalar_mul_view.rs:23:18
   |
23 | pub(super) const DOUBLE_COLS: Range<usize> = 0..G1_LEN;
   |                  ^^^^^^^^^^^

warning: constant `C_COLS` is never used
  --> src/starks/curves/g1/scalar_mul_view.rs:27:18
   |
27 | pub(super) const C_COLS: Range<usize> = 4 * G1_LEN..5 * G1_LEN;
   |                  ^^^^^^

warning: constant `GOLDILOCKS_INVERSE_65536` is never used
  --> src/starks/modular/addcy.rs:14:7
   |
14 | const GOLDILOCKS_INVERSE_65536: u64 = 18446462594437939201;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `eval_packed_generic_addcy` is never used
  --> src/starks/modular/addcy.rs:17:15
   |
17 | pub(crate) fn eval_packed_generic_addcy<P: PackedField>(
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `eval_ext_circuit_addcy` is never used
  --> src/starks/modular/addcy.rs:43:15
   |
43 | pub(crate) fn eval_ext_circuit_addcy<F: RichField + Extendable<D>, const D: usize>(
   |               ^^^^^^^^^^^^^^^^^^^^^^

warning: function `pol_mul_lo` is never used
   --> src/starks/modular/pol_utils.rs:239:15
    |
239 | pub(crate) fn pol_mul_lo<T, const N: usize>(a: [T; N], b: [T; N]) -> [T; N]
    |               ^^^^^^^^^^

warning: function `pol_mul_lo_ext_circuit` is never used
   --> src/starks/modular/pol_utils.rs:254:15
    |
254 | pub(crate) fn pol_mul_lo_ext_circuit<F: RichField + Extendable<D>, const D: usize>(
    |               ^^^^^^^^^^^^^^^^^^^^^^

warning: function `pol_extend` is never used
   --> src/starks/modular/pol_utils.rs:299:15
    |
299 | pub(crate) fn pol_extend<T, const N: usize, const M: usize>(a: [T; N]) -> [T; M]
    |               ^^^^^^^^^^

